<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd">


    <!-- spring 框架提供了多种数据源类，可以使用spring提供的DriverManagerDataSource类还可以使用第三方数据源，
        如C3P0的ComboPooledDataSource数据源类，注意相应的两个jar包c3p0-0.9.2.1.jar mchange-commons-java-0.2.3.4.jar
     -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/zzh?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <property name="user" value="root"/>
        <property name="password" value="root"/>
        <property name="maxPoolSize" value="40"/>
        <property name="minPoolSize" value="1"/>
        <property name="initialPoolSize" value="2"/>
        <property name="maxIdleTime" value="20"/>
    </bean>

    <!--
        Hibernate4已经完全实现自己的事物管理，所以spring4不提供HibernateDaoSupport和HibernateTemplete的支持
        可以在应用程序的spring上下文中，像配置其他bean那样来配置HibernateSession工厂。
        如果要使用XML文件定义对象与数据库之间的映射，则需要在spring中配置LocalSessionFactoryBean。
        hibernateProperties属性配置了Hibernate如何进行操作的细节。
        "hibernate.current_session_context_class"是为当前Session提供一个策略，
        Session由org.springframework.orm.hibernate4.SpringSessionContext.currentSession得到。
        将sessionFactory注入到其他Bean中，如注入到DAO组件中，使其获得SessionFactory的引用后，就可以实现对数据库的访问。
     -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingResources">
            <list>
                <value>com/entity/Member.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
                <prop key="hibernate.current_session_context_class">
                    org.springframework.orm.hibernate4.SpringSessionContext
                </prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
            </props>
        </property>
    </bean>


    <bean id="memberDao" class="com.dao.MemberDAOImpl">
        <!-- 构造方法注入会话工厂组件sessionFactory -->
        <constructor-arg>
            <ref bean="sessionFactory"/>
        </constructor-arg>
    </bean>


    <bean id="memberService" class="com.service.MemberServiceImpl">
        <!-- 设值注入DAO组件 -->
        <property name="memberDao" ref="memberDao"></property>
    </bean>


    <bean id="memberRegisterAction" class="com.action.MemberRegisterAction">
        <!-- 设值注入业务逻辑组件 -->
        <property name="memberService" ref="memberService"></property>
    </bean>

    <bean id="memberLoginAction" class="com.action.MemberLoginAction">
        <property name="memberService" ref="memberService"></property>
    </bean>

    <bean id="memberQueryAction" class="com.action.MemberQueryAction">
        <property name="memberService" ref="memberService"></property>
    </bean>

    <bean id="memberDeleteAction" class="com.action.MemberDeleteAction">
        <property name="memberService" ref="memberService"></property>
    </bean>

    <bean id="memberUpdateAction" class="com.action.MemberUpdateAction">
        <property name="memberService" ref="memberService"></property>
    </bean>
</beans>